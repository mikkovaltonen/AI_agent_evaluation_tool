warning: in the working copy of 'src/hooks/useAuth.ts', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/src/hooks/useAuth.ts b/src/hooks/useAuth.ts[m
[1mindex eae3063..c77c058 100644[m
[1m--- a/src/hooks/useAuth.ts[m
[1m+++ b/src/hooks/useAuth.ts[m
[36m@@ -12,28 +12,55 @@[m [mexport const useAuth = () => {[m
   useEffect(() => {[m
     // Check if user is already logged in[m
     const storedUser = localStorage.getItem('user');[m
[32m+[m[32m    console.log('üîç Checking stored user:', storedUser);[m
     if (storedUser) {[m
[31m-      setUser(JSON.parse(storedUser));[m
[32m+[m[32m      try {[m
[32m+[m[32m        const parsedUser = JSON.parse(storedUser);[m
[32m+[m[32m        console.log('‚úÖ Found stored user:', parsedUser);[m
[32m+[m[32m        setUser(parsedUser);[m
[32m+[m[32m      } catch (error) {[m
[32m+[m[32m        console.error('‚ùå Error parsing stored user:', error);[m
[32m+[m[32m        localStorage.removeItem('user');[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      console.log('‚ÑπÔ∏è No stored user found');[m
     }[m
     setLoading(false);[m
   }, []);[m
 [m
   const login = async (email: string, password: string) => {[m
[32m+[m[32m    console.log('üîë Login attempt:', { email });[m
[32m+[m[41m    [m
     if (email === 'forecasting@kemppi.com' && password === 'laatu') {[m
       const userData = {[m
         email: 'forecasting@kemppi.com',[m
         isAuthenticated: true[m
       };[m
[31m-      localStorage.setItem('user', JSON.stringify(userData));[m
[31m-      setUser(userData);[m
[31m-      return true;[m
[32m+[m[41m      [m
[32m+[m[32m      try {[m
[32m+[m[32m        localStorage.setItem('user', JSON.stringify(userData));[m
[32m+[m[32m        console.log('‚úÖ Login successful, user data stored');[m
[32m+[m[32m        setUser(userData);[m
[32m+[m[32m        return true;[m
[32m+[m[32m      } catch (error) {[m
[32m+[m[32m        console.error('‚ùå Error storing user data:', error);[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
     }[m
[32m+[m[41m    [m
[32m+[m[32m    console.log('‚ùå Login failed: Invalid credentials');[m
     return false;[m
   };[m
 [m
   const logout = () => {[m
[31m-    localStorage.removeItem('user');[m
[31m-    setUser(null);[m
[32m+[m[32m    console.log('üö™ Logging out user');[m
[32m+[m[32m    try {[m
[32m+[m[32m      localStorage.removeItem('user');[m
[32m+[m[32m      setUser(null);[m
[32m+[m[32m      console.log('‚úÖ Logout successful');[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error('‚ùå Error during logout:', error);[m
[32m+[m[32m    }[m
   };[m
 [m
   return {[m
